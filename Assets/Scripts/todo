pouring!

depth testing
---> use shader to get depth buffer.... NOPE
---> get depth buffer NOPE
--> render depth texture on main camera after opaques
---> use transparent render feature!
//https://forum.unity.com/threads/how-to-pass-depth-texture-to-shaders-in-custom-srp.1200985/ deotg sgader oreoass,,,,

    
color based on speed/turbulence

actualy simulate particles like water!

async dispatch + set data (water is one frame behind physics?)
acceleration data structure

depth tracking / nearest farther... for occlusion but also shading
shader work

blur based on distance.... (the closer the more blur....)